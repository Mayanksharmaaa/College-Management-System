<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>